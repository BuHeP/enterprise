daemon off;
worker_processes 1;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    upstream frontends{
        server localhost:8881;
        server localhost:8882;
    }

    server_tokens off;

    access_log logs/access.log;
    error_log logs/error.log;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # http://wiki.nginx.org/HttpProxyModule#proxy_next_upstream
    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error http_502;

    upstream app_server {
        server unix:/tmp/nginx.socket fail_timeout=0;
    }

    server {
        listen 5000;
        server_name _;
        keepalive_timeout 5;
        client_max_body_size 50M;

        location = /favicon.ico {
            rewrite (.*) https://d234q63orb21db.cloudfront.net/693157f63b66e73e43cfc960f7713838867d5f13/media/images/favicon.png;
        }

        location = /robots.txt {
            rewrite (.*) https://d234q63orb21db.cloudfront.net/693157f63b66e73e43cfc960f7713838867d5f13/media/other/robots.txt;
        }

        location = /sitemap.xml {
            rewrite (.*) https://d234q63orb21db.cloudfront.net/693157f63b66e73e43cfc960f7713838867d5f13/media/other/sitemap.xml;
        }

        location / {
            proxy_pass_header Server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://frontends;
        }
    }
}
